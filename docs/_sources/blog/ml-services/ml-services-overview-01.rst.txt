[第4回] ML サービスの全体像を把握する
================================================

はじめに
-------------------
| `前回 <https://news.mynavi.jp/itsearch/article/cloud/4913>`_ は、AI サービスの全体像についてご説明しました。今回は ML サービスの全体像を見ていきたいと思います。
| 今回の記事では、下記を理解していただくことを目標に解説をしていきます。

- ML サービスで提供される機能とそれぞれの概要 (特徴、東京リージョンでの利用可否等) がわかる。
- Amazon SageMaker の基本的な利用方法がわかる。


ML サービスとは
------------------------

ML サービスの全体像
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| ML サービスは、3つのレイヤーで提供される機械学習サービスの中位に位置するサービスであり、下図の赤枠内のサービスです。
| `Amazon SageMaker <https://aws.amazon.com/jp/sagemaker/>`_ からなる複数の機能の集合が ML サービスです。


.. image:: ../../../images/aws_ml_stack_2019_ml.png
  :width: 900px

(出典：2019年12月12日開催 「AWS re:Invent 2019 re:Cap | AI/ML」 の資料より)


Amazon SageMaker とは
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Amazon SageMaker は、上図に記載されている通り「機械学習のプロセス全体を効率化するマネージドサービス」です。
| 下記に示すような特徴を備えています。

- 機械学習ワークフローの全体に渡って、開発者やデータサイエンティストが機械学習モデルを開発するための便利な機能が多数提供されている。
- Amazon SageMaker の提供機能の中から利用者が必要な機能を選択して利用することができる。(例：開発環境としてノートブックインスタンスのみを利用)
- マネージドサービスとして提供されており、差別化につながらない作業は AWS に任せて、利用者はビジネス価値を生む機械学習モデルの開発に集中することができる。
- Amazon SageMaker で構築した機械学習モデルは本番環境にデプロイして、API 経由で利用者のアプリや他のサービスとの連携も容易に実現できる。

| `前回 <https://news.mynavi.jp/itsearch/article/cloud/4913>`_ の記事で紹介した AI サービスとの大きな違いは「柔軟性」にあると考えられます。
| AI サービスには、下記の特徴がありました。

- AWS から学習済の機械学習モデル、もしくは、機械学習モデルを生成する仕組みが提供される。
- ユースケースごとにサービスが用意されている。

| 自身のビジネス課題とユースケースが合致する場合ばかりではありませんし、精度などの要件を満たせないためにきめ細やかなチューニングを行いたいということもあります。
| Amazon SageMaker ではこういったものに縛られることなく、柔軟に機械学習モデルの開発をすることができます。

| その反面、機械学習に関する専門的な知識が必要となりますが、これから紹介する機能を使って簡単に開発を進めることができます。
| 初学者にとっては簡単に、熟練者にとってはアジリティを持って機械学習の開発を進めることができます。


Amazon SageMaker で提供される機能
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Amazon SageMaker で提供されている機能を、「AWS ML スタック」で取り上げられている機能を中心にして、概要をまとめます。
| 読者の多くは東京リージョンでの利用を想定していると考えられるため、東京リージョンでの利用可否についても記載します。
| 2020年5月20日時点の公開情報に基づいていて作成しますが、今後のアップデートにより変わる可能性がありますので、ご注意ください。


.. list-table::
    :header-rows: 1

    * - サービス名
      - 機能の説明
      - 東京での利用可否
    * - `Amazon SageMaker <https://aws.amazon.com/jp/sagemaker/>`_
      - | 機械学習モデルの開発・構築・推論を行うための様々な機能を提供する。
        | ノートブックインスタンス
      - ○
    * - `Amazon SageMaker Ground Truth <https://aws.amazon.com/jp/sagemaker/groundtruth/>`_
      - | Ground Truth とは「教師データにおける正解」であり、画像のラベリングなどを支援する機能。
        | 自社メンバや社外のベンダ、`Amazon Mechanical Turk <https://www.mturk.com/>`_ への作業のアウトソーシングも可能。
        | 自動ラベル付け機能も提供されており、ラベル付け作業の効率化も可能。
      - ○
    * - Amazon SageMaker Studio
      - | 機械学習モデルを効率的に開発・学習・推論をするための Web ブラウザベースの統合開発環境 (IDE) を提供する。
        | 認証方法として、AWS IAM だけでなく、AWS SSO (シングルサインオン) もサポートしており、AWS マネジメントコンソールを経由せずに Amazon SageMaker Studio 用の URL に直接サインインすることが可能。
        | 下記に示す Amazon SageMaker の各機能と統合されており、シームレスに利用することができる。
        | - Amazon SageMaker Notebooks
        | - Amazon SageMaker Experiments
        | - Amazon SageMaker Autopilot
        | - Amazon SageMaker Debugger
        | - Amazon SageMaker Model Monitor
      - ×
    * - Amazon SageMaker Notebooks
      - | Amazon SageMaker Studio に統合されている完全マネージドな JupyterLab ベースのノートブック。
        | Amazon SageMaker のノートブックインスタンスとは異な利、利用者側でインスタンスタイプの設定、起動・停止などを意識する必要がない。
      - ×
    * - Amazon SageMaker Processing
      - データの前処理や後処理をバッチ処理で実行可能。
      - ○
    * - `AWS Marketplace <https://aws.amazon.com/marketplace/solutions/machine-learning/>`_
      - | サードパーティ製の機械学習モデルの購入して、Amazon SageMaker での利用が可能。
        | 利用者が構築した機械学習モデルを出品することも可能。
      - ○
    * - Amazon SageMaker Experiments
      - 学習の実行や学習の結果生成したモデルやハイパーパラメータ、精度などのメトリクスの一元的な管理が可能。
      - ○
    * - `Amazon SageMaker Autopilot <https://aws.amazon.com/jp/sagemaker/autopilot/>`_
      - | 回帰 (線形回帰) と分類 (二値/多値分類) に対する AutoML 機能を提供する。
        | 表形式の学習データをインプットとして、数クリックするだけで機械学習モデルの構築が可能。
        | 機械学習ワークフローのうちの「データの前処理」・「モデルの構築」・「モデルの学習」・「モデルの評価」を自動で実行する。
        | 機械学習モデル以外のアウトプットとして、下記の2つの Jupyter notebook 形式でが出力されるので、処理内容のホワイトボックス化が可能。
        | - 候補生成ノートブック：推奨される前処理、機械学習アルゴリズム、ハイパーパラメータ (機械学習アルゴリズムの設定値) の探索範囲を提示
        | - データ探索ノートブック：学習データの分析結果を提示
      - ×
    * - Amazon SageMaker Debugger
      - ルールを定義して、Amazon S3 に出力される学習の途中結果 (テンソルデータ) を監視、記録、分析し、学習の異常を検出することが可能。
      - ○
    * - 自動モデル調整
      - ベイズ最適化もしくはランダム探索によるハイパーパラメータのチューニングを自動で実施することが可能。
      - ○
    * - Amazon SageMaker Model Monitor
      - | 本番環境にデプロイした推論エンドポイントの継続的な監視が可能。
        | ユーザの行動変化などによる予測精度の低下の検知が可能。
      - ○
    * - | `Amazon Augmented AI (A2I) <https://aws.amazon.com/jp/augmented-ai/>`_
        | ※ プレビュー
      - | 信頼性の低い推論結果に対する人間の確認と修正をするためのワークフローの構築が可能。
        | 例えば、手書き文字認識の結果の確認と修正と実施する。
      - × (バージニアのみ)
    * - `Amazon SageMaker Neo <https://aws.amazon.com/jp/sagemaker/neo/>`_
      - 機械学習モデルを AWS IoT Greengrass (エッジデバイス) などで高速に動作させるように変換できる機能。
      - ○


| Amazon SageMaker ではたくさんの機能が提供されていて便利である反面、初学者にとっては混乱の一因となる可能性があります。
| 実際に私自身がそうでした。例えば、初学者にとっては下記のような印象を持っているのではないでしょうか？

- 「ノートブックインスタンス」、「学習用インスタンス」、「推論用インスタンス」など似た名前のコンポーネントが多くて紛らわしい。
- 機能がたくさんあってどれを使っていいのか、あるいは、使いどころがわからない。

ここからは上記の悩みに注意しながら、 Amazon SageMaker の利用方法について説明していきたいと思います。


Amazon SageMaker の利用方法
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| ここでは、簡単のために機械学習ワークフローを「開発」、「学習」、「推論」の3つと考えます。
| 特徴として説明したように、Amazon SageMaker は、利用者が必要な機能を選択して利用することができます。
| 本連載の趣旨に従って、AWS を使ってこれから機械学習を始める場合を想定し、上記の3つの全てを Amazon SageMaker で実施する場合を考えます。

| Amazon SageMaker の利用方法は「開発環境」を軸に整理すると、下記の2パターンに分けられます。

- ノートブックインスタンスを利用するパターン (従来からの利用パターン)
- Amazon SageMaker Studio を利用するパターン

| 前者が従来からの Amazon SageMaker の利用方法で、後者は「AWS re:Invent 2019」での Amazon SageMaker Studio が登場したことにより発生したパターンです。
| 前者が Amazon SageMaker の基本的な使い方となるため、これをベースにして用語や使い方を説明していきたいと思います。
| 今回はイメージの構築を優先するため、多少の正確さに欠ける点はご了承ください。


主要な登場人物の整理
++++++++++++++++++++++++++++++
まずは「ノートブックインスタンスを利用するパターン」の登場人物を下記の図と表に整理します。

.. image:: ../../../images/amazon_sagemaker_notebook_instance_0.png
  :width: 900px

(「ノートブックインスタンスを利用するパターン」の全体像)


.. list-table::
    :header-rows: 1

    * - 登場人物
      - 役割
    * - Amazon S3
      - インプットとなる学習データや学習のアウトプットとなる機械学習モデルを格納に利用するオブジェクトストレージ。
    * - Amazon ECR
      - 学習や推論に必要なコードやライブラリなどをコンテナイメージとして格納しておくためのレジストリ。
    * - ノートブックインスタンス
      - | 学習や推論用のコードの開発を行うためのインスタンス。
        | Jupyter Notebook もしくはその後継である JupyterLab を利用してコードの開発ができる。
        | 機械学習ライブラリが充実しているため、Python での開発が望ましい。
        | Amazon Sagemaker Python SDK を利用して、ノートブックインスタンスから学習や推論を実施することができる。
    * - 学習用インスタンス
      - | 機械学習モデルの学習を行うためのインスタンス。  
        | 学習ジョブの開始を契機に学習用インスタンスを起動し、Amazon S3 から学習データを、Amazon ECR からコンテナイメージをダウンロードして、コンテナの起動を行う。  
        | 学習の完了後、学習済の機械学習モデルを Amazon S3 に格納し、自動で学習用インスタンスを削除してくれるため、余計なコストがかからない。
    * - 推論用インスタンス
      - | 機械学習モデルを稼働させて推論を行うためのインスタンス。  
        | ノートブックインスタンスからのデプロイ操作を契機にして、推論用インスタンスを起動し、Amazon S3 から学習モデルを、Amazon ECR から推論用のコンテナイメージをダウンロードして、コンテナの起動を行う。  
        | 推論用エンドポイント (アプリとのインターフェース) を作成する。  
        | アプリから推論エンドポイントに推論用のデータを渡して、機械学習モデルが判断した結果を返す。


開発時の流れ
+++++++++++++++++++

.. image:: ../../../images/amazon_sagemaker_notebook_instance_1.png
  :width: 900px


開発時の

  1. ノートブックインスタンスの作成を作成し、学習や推論用のコードを開発する。
  2. Amazon S3 に学習データを格納する。
  3. 学習、推論用のコンテナイメージを作成して格納する。


学習時の流れ
+++++++++++++++++++

.. image:: ../../../images/amazon_sagemaker_notebook_instance_2.png
  :width: 900px

4. ノートブックインスタンスから学習ジョブを起動し、学習用インスタンスを作成する。
5. Amazon S3 から学習データと、Amazon ECR からコンテナイメージをダウンロードして、コンテナを起動する。
6. 学習を実行する。
7. 学習が完了したら、Amazon S3 に学習済の機械学習モデルを格納して、学習用インスタンスを削除する。


推論時の流れ
+++++++++++++++++++

.. image:: ../../../images/amazon_sagemaker_notebook_instance_3.png
  :width: 900px

8. ノートブックインスタンスから推論用インスタンスの起動する。
9. Amazon S3 から機械学習モデルを、Amazon ECR からコンテナイメージのダウンロードしてコンテナを起動する。
10. 推論エンドポイントを作成する。



まとめ
---------------
| 今回の記事では、ML サービスの全体像と Amazon SageMaker の概要、利用方法についてご説明させていただきました。
| 次回は、実際に Amazon SageMaker を使って機械学習モデルを構築してみたいと思います。


+++++++++++

.. include:: ../author/author.rst