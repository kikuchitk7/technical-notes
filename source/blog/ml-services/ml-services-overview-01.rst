[第4回] ML サービスの全体像を把握する
================================================

はじめに
-------------------
| `前回 <https://news.mynavi.jp/itsearch/article/cloud/4913>`_ は、AI サービスの全体像についてご説明しました。今回は ML サービスの全体像を見ていきたいと思います。
| 今回の記事では、下記を理解していただくことを目標に解説をしていきます。

- ML サービスで提供される機能とそれぞれの概要がわかる。
- Amazon SageMaker の基本的な利用方法がわかる。


ML サービスとは
------------------------

ML サービスの全体像
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ML サービスは、3つのレイヤーで提供される機械学習サービスの中位に位置するサービスであり、下図の赤枠内のサービスです。


.. image:: ../../../images/aws_ml_stack_2019_ml.png
  :width: 900px

(出典：2019年12月12日開催 「AWS re:Invent 2019 re:Cap | AI/ML」 の資料より)


| Amazon SageMaker を中心とする複数の機能の集合が ML サービスです。
| 上図に記載されている通り「機械学習のプロセス全体を効率化するマネージドサービス」です。

| ML スタック内に示された機能のうち、下記に示すサービスは昨年末に米国のラスベガスで開催された「AWS re:Invent 2019」で新たに発表された機能です。
| (機能名にリンクがないものは、`Amazon SageMaker <https://aws.amazon.com/jp/sagemaker/>`_ の製品ページに記載があります)

- Amazon SageMaker Studio (Web ブラウザベースの統合開発環境 (IDE))
- Amazon SageMaker Notebooks (Amazon SageMaker Studio に統合された完全マネージドなノートブック)
- Amazon SageMaker Experiments (学習ジョブの実行履歴や設定、結果を一元管理)
- Amazon SageMaker Debugger (学習の監視、記録、分析と異常の検知)
- `Amazon SageMaker Autopilot <https://aws.amazon.com/jp/sagemaker/autopilot/>`_ (AutoML 機能による機械学習モデルの自動構築)
- Amazon SageMaker Model Monitor (本番環境にデプロイした推論エンドポイントの継続的な監視)
- `Amazon Augmented AI (A2I) <https://aws.amazon.com/jp/augmented-ai/>`_ (信頼性の低い推論結果の人間の確認と修正)

| Amazon SageMaker は、登場時から機械学習ワークフローの全体に渡って様々な機能が提供されてきました。
| その後も機能が次々と追加されてきましたが、今回のアップデートでは、より一層の機能が強化されて、更に便利に使うことができるようになりました。
| ここでは、この程度の簡単な紹介に留め、各機能の詳細は後続の記事で扱います。


Amazon SageMaker とは
-----------------------------
ここからは ML サービスの中心機能である Amazon SageMaker の概要や基本的な使い方について見ていきます。

Amazon SageMaker の概要
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Amazon SageMaker は、データサイエンティストや開発者向けのサービスであり、機械学習ワークフローの全体に渡って多数の機能が提供されています。
| マネージドサービスとして提供されており、差別化につながらない作業は AWS に任せて、利用者はビジネス価値を創出に全力を注ぐことができます。

機械学習モデルを開発する際に発生しがちな問題・課題についていくつか例を見てみましょう。


機械学習モデルの開発における問題・課題
********************************************
| 機械学習ワークフローは大きく「開発」「学習」「推論」の3段階に分けて考えます。
| それぞれの工程で様々な問題・課題が発生します。そして、これらの多くはビジネス上の価値を生みません。

**開発**

- PC などの開発環境の準備やコードの開発に必要なツール (Jupyter Notebook やフレームワークなど) のインストールや維持が必要である。
- データサイエンティストや開発者が複数いる場合は人数分の対応が必要である。

**学習**

- 学習環境であるサーバの準備や必要なツール (フレームワークなど) のインストールや維持が必要である。
- 分散学習などのテクニックやいくつかのバリエーションでの学習を行う場合は、複数のインスタンスの起動や停止などの操作や管理が必要である。
- 学習のバリエーションが増えてくると、学習の設定値や精度の管理が大変になり、追跡できなくなる。

**推論**

- 学習済の機械学習モデルをデプロイして推論を行うためのサーバの準備が必要である。
- 利用者のアプリとデプロイした機械学習モデルの接続ポイントとなるエンドポイントの構築が必要である。
- リクエスト数が増減に応じて、サーバを増減させてサービスの品質を保つ必要がある。


Amazon SageMaker で提供される機能
********************************************
| Amazon SageMaker では上記で挙げた問題・課題を解決するための様々な機能が提供されており、データサイエンティストや開発者は機械学習を利用したビジネス価値の創出に注力することができます。
| 下記に、代表的かつ基本的な機能について記載します。
| 冒頭で紹介した新機能を含めて、他にも多数の機能が提供されています。後続の連載で扱っていく予定ですが、いち早く知りたい方は `Amazon SageMaker の開発者ガイド <https://docs.aws.amazon.com/ja_jp/sagemaker/latest/dg/whatis.html>`_ などをご参照ください。

- 「開発」「学習」「推論」のための実行環境 (インスタンス) を提供する。

  - 開発環境：ノートブックインスタンス
  - 学習環境：学習用インスタンス
  - 推論環境：推論用インスタンス

- 「開発」「学習」「推論」に必要なツールを提供する。

  - Jupyter Notebook/JupyterLab (ノートブックインスタンスにプリインストール)
  - 人気の高い機械学習アルゴリズムや機械学習・深層学習フレームワークのコンテナイメージ
  - Amazon SageMaker SDK (Software Developer Kit)　など

- 「開発」「学習」「推論」を便利に実行するための機能を提供する。

  - Amazon SageMaker SDK による学習の実行や学習済の機械学習モデルのデプロイ・ホスティング
  - 複数の学習用インスタンスでの分散学習
  - 推論用エンドポイント
  - 推論用インスタンスのオートスケーリング　など

- API による他の AWS のサービスとの連携機能を提供する。

  - Amazon S3
  - Amazon ECR など


| また、Amazon SageMaker では、これらの機能を利用者のニーズに応じて選択して利用することができます。
| 例えば、下記に示すような利用方法を採ることができます。

  - 開発環境としてノートブックインスタンスのみを利用する
  - ノートブックインスタンスで開発し、複数の学習用インスタンスで分散学習を行った後にオンプレミスの環境で推論を行う　など


Amazon SageMaker の基本的な使い方
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| ここからは、Amazon SageMaker の基本的な使い方について見ていきます。
| 簡単のために機械学習ワークフローを「開発」「学習」「推論」の3つと考えます。
| AWS を使ってこれから機械学習を始める場合を想定し、上記の3つの工程の全てを Amazon SageMaker を使って実現する場合を考えます。


登場するコンポーネントを抑える
***************************************
| Amazon SageMaker を利用する上で、初学者がまず直面する壁は登場するコンポーネント (サービスや機能など) の多さによる混乱と考えられます。
| 似たような名前のものも多く、混乱の一因となる可能性があります。(実際に私自身がそうでした)

| Amazon SageMaker を利用する上で最低限抑えるべきコンポーネントとそれぞれの役割をまとめます。


.. image:: ../../../images/amazon_sagemaker_notebook_instance_0.png
  :width: 900px

(Amazon SageMaker の利用において抑えるべきコンポーネント)



.. list-table::
    :header-rows: 1

    * - コンポーネント名
      - 役割
    * - `Amazon S3 <https://aws.amazon.com/jp/s3/>`_
      - 学習のインプットとなる学習データやアウトプットとなる機械学習モデルを格納に利用するオブジェクトストレージ。
    * - `Amazon ECR <https://aws.amazon.com/jp/ecr/>`_
      - | Amazon SageMaker では、学習と推論に Docker コンテナを利用する。
        | 学習や推論に必要なコードやライブラリを Docker コンテナイメージとしてビルドしておき、学習用・推論用インスタンスでそれぞれ Docker コンテナとして実行する。
        | Amazon ECR は、それらを格納しておくための Docker コンテナイメージのレジストリ。
    * - ノートブックインスタンス
      - | 学習や推論用のコードの開発を行うためのインスタンス。
        | Jupyter Notebook もしくは JupyterLab を利用して開発を行う。
        | SDK を利用して、ここからから学習ジョブの起動や機械学習モデルのデプロイ・推論用エンドポイント (API) の作成を実施することができる。
    * - 学習用インスタンス
      - | 学習用 Docker コンテナを稼働させるためのインスタンス。
        | 学習ジョブの開始を契機に学習用インスタンスが自動で起動し、Amazon S3 と Amazon ECR から学習データとコンテナイメージをそれぞれダウンロードして、学習用コンテナの起動を行う。  
        | 学習の完了後に、学習済の機械学習モデルを Amazon S3 に格納し、自動で学習用インスタンスが削除されるため、余計なコストがかからない仕組みになっている。
    * - 推論用インスタンス
      - | 推論用 Docker コンテナを稼働させるためのインスタンス。  
        | デプロイ操作を契機に推論用インスタンスを起動し、Amazon S3 と Amazon ECR から学習済の機械学習モデルと推論用コンテナイメージをダウンロードして、推論用コンテナの起動を行う。  
        | 推論用エンドポイント (API) が作成され、これを経由してアプリなど外部からのリクエストを受け付けて推論結果を返す。


「開発」「学習」「推論」の処理の流れ
*****************************************
| 「開発」「学習」「推論」の各工程における処理の流れを下記に示します。
| 図中の番号と処理の説明を対応づけながら参照してください。


**開発**

.. image:: ../../../images/amazon_sagemaker_notebook_instance_1.png
  :width: 900px

::

  1. ノートブックインスタンスの作成を作成し、学習や推論用のコードを開発する。
  2. Amazon S3 に学習データを格納する。
  3. 学習、推論用のコンテナイメージを作成して格納する。


**学習**

.. image:: ../../../images/amazon_sagemaker_notebook_instance_2.png
  :width: 900px

::

  4. ノートブックインスタンスから学習ジョブを起動すると、学習用インスタンスが自動作成される。
  5. Amazon ECR からコンテナイメージをダウンロードして、学習用コンテナを起動する。
  6. Amazon S3 から学習データをダウンロードして、学習を実行する。
  7. 学習が完了したら、Amazon S3 に学習済の機械学習モデルを格納して、学習用インスタンスを自動削除する。


**推論**

.. image:: ../../../images/amazon_sagemaker_notebook_instance_3.png
  :width: 900px

::

  8. ノートブックインスタンスから推論用インスタンスの起動する。
  9. Amazon ECR からコンテナイメージを、Amazon S3 から機械学習モデルをダウンロードしてコンテナを起動する。
  10. 推論エンドポイントを作成し、アプリや他の AWS のサービスからアクセスする。


まとめ
---------------
| 今回の記事では、ML サービスおよび Amazon SageMaker の概要と利用方法についてご説明させていただきました。
| 次回は、実際に Amazon SageMaker を使って機械学習モデルを構築してみたいと思います。


+++++++++++

.. include:: ../author/author.rst